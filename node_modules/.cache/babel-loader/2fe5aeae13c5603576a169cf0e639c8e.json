{"ast":null,"code":"'use strict';\n\nvar _jsxFileName = \"/Users/yoohyunsun/pixori-prototype/src/colorbutton.js\";\nimport React, { useState } from \"react\";\nimport { ChromePicker } from 'react-color';\n\nclass ButtonExample extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayColorPicker: false\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        displayColorPicker: !this.state.displayColorPicker\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        displayColorPicker: false\n      });\n    };\n  }\n\n  render() {\n    function changeColor(color) {\n      setColor(color.hex);\n    }\n\n    const [selectedColor, setColor] = useState(\"000000\");\n    const popover = {\n      position: 'absolute',\n      zIndex: '2'\n    };\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }\n    }, \"Pick Color\"), this.state.displayColorPicker ? /*#__PURE__*/React.createElement(\"div\", {\n      style: popover,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: cover,\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(ChromePicker, {\n      color: selectedColor,\n      onChangeComplete: changeColor,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    })) : null);\n  }\n\n}\n\nexport default ButtonExample;","map":{"version":3,"sources":["/Users/yoohyunsun/pixori-prototype/src/colorbutton.js"],"names":["React","useState","ChromePicker","ButtonExample","Component","state","displayColorPicker","handleClick","setState","handleClose","render","changeColor","color","setColor","hex","selectedColor","popover","position","zIndex","cover","top","right","bottom","left"],"mappings":"AAAA;;;AAEA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,aAA7B;;AAEA,MAAMC,aAAN,SAA4BH,KAAK,CAACI,SAAlC,CAA4C;AAAA;AAAA;AAAA,SAIxCC,KAJwC,GAIhC;AACRC,MAAAA,kBAAkB,EAAE;AADZ,KAJgC;;AAAA,SAQ1CC,WAR0C,GAQ5B,MAAM;AAClB,WAAKC,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAAlC,OAAd;AACD,KAVyC;;AAAA,SAY1CG,WAZ0C,GAY5B,MAAM;AAClB,WAAKD,QAAL,CAAc;AAAEF,QAAAA,kBAAkB,EAAE;AAAtB,OAAd;AACD,KAdyC;AAAA;;AAiB1CI,EAAAA,MAAM,GAAG;AACP,aAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxBC,MAAAA,QAAQ,CAACD,KAAK,CAACE,GAAP,CAAR;AACD;;AACH,UAAM,CAACC,aAAD,EAAgBF,QAAhB,IAA4BZ,QAAQ,CAAC,QAAD,CAA1C;AACA,UAAMe,OAAO,GAAG;AACdC,MAAAA,QAAQ,EAAE,UADI;AAEdC,MAAAA,MAAM,EAAE;AAFM,KAAhB;AAIA,UAAMC,KAAK,GAAG;AACZF,MAAAA,QAAQ,EAAE,OADE;AAEZG,MAAAA,GAAG,EAAE,KAFO;AAGZC,MAAAA,KAAK,EAAE,KAHK;AAIZC,MAAAA,MAAM,EAAE,KAJI;AAKZC,MAAAA,IAAI,EAAE;AALM,KAAd;AAOA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,OAAO,EAAG,KAAKhB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEI,KAAKF,KAAL,CAAWC,kBAAX,gBAAgC;AAAK,MAAA,KAAK,EAAGU,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAChC;AAAK,MAAA,KAAK,EAAGG,KAAb;AAAqB,MAAA,OAAO,EAAG,KAAKV,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADgC,eAEhC,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAEM,aAArB;AAAoC,MAAA,gBAAgB,EAAEJ,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFgC,CAAhC,GAGO,IALX,CADF;AASD;;AA1CyC;;AA6C5C,eAAeR,aAAf","sourcesContent":["'use strict'\n\nimport React, {  useState } from \"react\";\nimport { ChromePicker } from 'react-color'\n\nclass ButtonExample extends React.Component {\n \n \n \n    state = {\n    displayColorPicker: false,\n  };\n\n  handleClick = () => {\n    this.setState({ displayColorPicker: !this.state.displayColorPicker })\n  };\n\n  handleClose = () => {\n    this.setState({ displayColorPicker: false })\n  };\n  \n\n  render() {\n    function changeColor(color) {\n        setColor(color.hex);\n      }\n    const [selectedColor, setColor] = useState(\"000000\");\n    const popover = {\n      position: 'absolute',\n      zIndex: '2',\n    }\n    const cover = {\n      position: 'fixed',\n      top: '0px',\n      right: '0px',\n      bottom: '0px',\n      left: '0px',\n    }\n    return (\n      <div>\n        <button onClick={ this.handleClick }>Pick Color</button>\n        { this.state.displayColorPicker ? <div style={ popover }>\n          <div style={ cover } onClick={ this.handleClose }/>\n          <ChromePicker color={selectedColor} onChangeComplete={changeColor}  />\n        </div> : null }\n      </div>\n    )\n  }\n}\n\nexport default ButtonExample"]},"metadata":{},"sourceType":"module"}